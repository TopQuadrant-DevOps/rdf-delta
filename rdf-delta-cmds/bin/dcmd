#!/usr/bin/env bash
## Licensed under the terms of http://www.apache.org/licenses/LICENSE-2.0

## Usage: dcmd <delta_main>
## Sets up the java enviroment to run a command from RDF Delta.

CP="${CP:-}"

DELTA_HOME=${DELTA_HOME:-/home/afs/ASF/rdf-delta}
CP_DIR="$DELTA_HOME/rdf-delta-cmds"

CPF="$CP_DIR/delta.classpath"
if [ ! -e "$CPF" ]; then
    echo "Need to create Delta classpath file"
    echo "Ensure maven is up to date with the latest snapshots and then run"
    echo -e "( cd $CP_DIR/ ; \n  mvn dependency:build-classpath -Dmdep.outputFile=delta.classpath )"
    exit 1
fi
DELTA_CP="$(cat $CPF)"

# Delta modules
read -r -d '' MODULES << EOM
rdf-delta-base
rdf-delta-client
rdf-delta-server-http
rdf-delta-server-local
rdf-delta-server-extra
rdf-delta-system
rdf-delta-test
rdf-patch 
rdf-delta-cmds
dev-rdf-delta
EOM

if true # if in development area
then
    for X in $MODULES
    do
	[[ $D = "" ]] || D="$D:"
	D="${D}$DELTA_HOME/$X/target/classes"
    done
else
    ## @@ By artifacts ...
    echo "Not implemented: classpath by artifacts" 2>&1
    exit 9
fi

# Prepend target/classes
DELTA_CP="$D:$DELTA_CP"

if [[ -e logging.properties ]]
then
    LOGGING=-Djava.util.logging.config.file=logging.properties
fi
## # Overrides JUL.
## if [[ -e log4j.properties ]]
## then
##     LOGGING=-Dlog4j.configuration=file:log4j.properties
## fi

function usage() {
    echo "Commands: server, ls, mk, rm, list, get, add, parse, path, r2p, p2r" 1>&2
    ##echo "Class path: $DELTA_CP"
    exit
}

if [[ $# = 0 ]]
then
    usage
fi

if [[ $1 = path ]]
then
    echo "$DELTA_CP"
    exit
fi

## echo "DELTA_CP=$DELTA_CP"
## echo "JENA_CP=$JENA_CP"
## echo java $JVM_ARGS $LOGGING -cp "$DELTA_CP" "$CLASS" "$@"

# Add CMD to org.seaborne.delta.cmds.rdf2patch.CMD

## exec org.seaborne.delta.cmds.dcmd
#exec java $JVM_ARGS -cp "$DELTA_CP" $LOGGING "$CMD_CLS" "$@"

## Becomes:
exec java $JVM_ARGS -cp "$DELTA_CP"   $LOGGING org.seaborne.delta.cmds.dcmd "$@"
