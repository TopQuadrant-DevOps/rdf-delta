#!/usr/bin/env bash
## Licensed under the terms of http://www.apache.org/licenses/LICENSE-2.0

## Usage: dcmd <delta_main>
## Sets up the java enviroment to run a command from RDF Delta.

CP="${CP:-}"

#JENA_CP="$(jena)"
## If Jena development, this needs to be different.
JENA_CP="$HOME/jlib/fuseki2/fuseki-server.jar"

## Log4j
LOG4J_CP="/home/afs/.m2/repo/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/home/afs/.m2/repo/log4j/log4j/1.2.17/log4j-1.2.17.jar"
## JUL
JUL_CP="/home/afs/.m2/repo/org/slf4j/slf4j-jdk14/1.7.25/slf4j-jdk14-1.7.25.jar"

H="$HOME/ASF/rdf-delta"

M="$HOME/.m2/repo"

VER_ZK=3.5.3-beta
VER_CURATOR=4.0.1
ZK_CP="$M/org/apache/curator/curator-recipes/$VER_CURATOR/curator-recipes-$VER_CURATOR.jar:\
$M/org/apache/curator/curator-framework/$VER_CURATOR/curator-framework-$VER_CURATOR.jar:\
$M/org/apache/curator/curator-client/$VER_CURATOR/curator-client-$VER_CURATOR.jar:\
$M/org/apache/curator/curator-test/$VER_CURATOR/curator-test-$VER_CURATOR.jar:\
$M/org/apache/zookeeper/zookeeper/$VER_ZK/zookeeper-$VER_ZK.jar:\
$M/commons-cli/commons-cli/1.4/commons-cli-1.4.jar:\
$M/io/netty/3.10.5/netty-3.10.5.jar:\
$M/com/google/guava/guava/20.0/guava-20.0.jar\
"
D="$ZK_CP"

# Delta modules
read -r -d '' MODULES << EOM
rdf-delta-base
rdf-delta-client
rdf-delta-server-http
rdf-delta-server-local
rdf-delta-system
rdf-delta-test
rdf-patch 
rdf-delta-cmds
dev-rdf-delta
EOM

if true # if in development area
then
    for X in $MODULES
    do
	[[ $D = "" ]] || D="$D:"
	D="${D}$H/$X/target/classes"
    done
else
    ## @@ By artifacts ...
    echo "Not implemented: classpath by artifacts" 2>&1
    exit 9
fi

DELTA_CP="$D"

if [[ -e logging.properties ]]
then
    LOGGING=-Djava.util.logging.config.file=logging.properties
fi
# Overrides JUL.
if [[ -e log4j.properties ]]
then
    LOGGING=-Dlog4j.configuration=file:log4j.properties
fi

function usage() {
    echo "Commands: server, ls, mk, rm, list, get, add, parse, path, r2p, p2r" 1>&2
    ##echo "Class path: $DELTA_CP:${JENA_CP}"
    exit
}

if [[ $# = 0 ]]
then
    usage
else
    CMD="$1"
    shift
fi

# Map CMD to class name
BASE_PKG="org.seaborne.delta"
DCMD_PKG="${BASE_PKG}.cmds"

## @@ To java.
# Alternative names.
case $CMD in
     help|-h|--help)
	usage
	;;
    appendpatch|append|add)
	CMD=addpatch ;;
    mk)
	CMD=mklog ;;
    rm)
	CMD=rmlog ;;
    get)
	CMD=getpatch ;;
    r2p)
	CMD=rdf2patch ;;
    p2r)
	CMD=patch2rdf ;;
    parse|validate)
	CMD=patchparse ;;
    *) ;;
esac

# Map to class name.
case $CMD in
    "")
    ;;
    mklog | rmlog | list | addpatch | getpatch )
	CMD_CLS="$DCMD_PKG"."$CMD"
	;;
    ls)
        CMD_CLS="${DCMD_PKG}.list"
	;;
    rdf2patch | patch2rdf | patchparse )
	CMD_CLS="$DCMD_PKG"."$CMD"
	;;
    patchserver | server )
	CMD_CLS="delta.server.DeltaServer"
	;;
    org.seaborne.delta.* | delta.* )
	## @@ Develpoment feature
	CMD_CLS=$CMD
	;;
    tools.*)
	CMD_CLS="${BASE_PKG}"."$CMD"
	;;
    path)
	echo $DELTA_CP:${JENA_CP}
	exit
	;;
    *)
	echo "Unknown command $CMD" 2>&1
	exit 1
    ;;

esac

## echo "DELTA_CP=$DELTA_CP"
## echo "JENA_CP=$JENA_CP"
## echo java $JVM_ARGS $LOGGING -cp "$DELTA_CP:${JENA_CP}" "$CLASS" "$@"

# Add CMD to org.seaborne.delta.cmds.rdf2patch.CMD

## exec org.seaborne.delta.cmds.dcmd
exec java $JVM_ARGS $LOGGING -cp "$DELTA_CP:${JENA_CP}" "$CMD_CLS" "$@"

## Becomes:
#exec java $JVM_ARGS $LOGGING -cp "$DELTA_CP:${JENA_CP}"  org.seaborne.delta.cmds.dcmd "$@"
